/*! normalize.css v3.0.3 | MIT License | github.com/necolas/normalize.css */
/**
 * 1. Set default font family to sans-serif.
 * 2. Prevent iOS and IE text size adjust after device orientation change,
 *    without disabling user zoom.
 */
html {
  font-family: sans-serif;
  /* 1 */
  -ms-text-size-adjust: 100%;
  /* 2 */
  -webkit-text-size-adjust: 100%;
  /* 2 */ }

/**
 * Remove default margin.
 */
* {
  outline: none;
  oultine: 0; }

body {
  margin: 0; }

/* HTML5 display definitions
   ========================================================================== */
/**
 * Correct `block` display not defined for any HTML5 element in IE 8/9.
 * Correct `block` display not defined for `details` or `summary` in IE 10/11
 * and Firefox.
 * Correct `block` display not defined for `main` in IE 11.
 */
article,
aside,
details,
figcaption,
figure,
footer,
header,
hgroup,
main,
menu,
nav,
section,
summary {
  display: block; }

/**
 * 1. Correct `inline-block` display not defined in IE 8/9.
 * 2. Normalize vertical alignment of `progress` in Chrome, Firefox, and Opera.
 */
audio,
canvas,
progress,
video {
  display: inline-block;
  /* 1 */
  vertical-align: baseline;
  /* 2 */ }

/**
 * Prevent modern browsers from displaying `audio` without controls.
 * Remove excess height in iOS 5 devices.
 */
audio:not([controls]) {
  display: none;
  height: 0; }

/**
 * Address `[hidden]` styling not present in IE 8/9/10.
 * Hide the `template` element in IE 8/9/10/11, Safari, and Firefox < 22.
 */
[hidden],
template {
  display: none; }

/* Links
   ========================================================================== */
/**
 * Remove the gray background color from active links in IE 10.
 */
a {
  background-color: transparent; }

/**
 * Improve readability of focused elements when they are also in an
 * active/hover state.
 */
a:active,
a:hover {
  outline: 0; }

/* Text-level semantics
   ========================================================================== */
/**
 * Address styling not present in IE 8/9/10/11, Safari, and Chrome.
 */
abbr[title] {
  border-bottom: 1px dotted; }

/**
 * Address style set to `bolder` in Firefox 4+, Safari, and Chrome.
 */
b,
strong {
  font-weight: bold; }

/**
 * Address styling not present in Safari and Chrome.
 */
dfn {
  font-style: italic; }

/**
 * Address variable `h1` font-size and margin within `section` and `article`
 * contexts in Firefox 4+, Safari, and Chrome.
 */
h1 {
  font-size: 2em;
  margin: 0.67em 0; }

/**
 * Address styling not present in IE 8/9.
 */
mark {
  background: #ff0;
  color: #000; }

/**
 * Address inconsistent and variable font size in all browsers.
 */
small {
  font-size: 80%; }

/**
 * Prevent `sub` and `sup` affecting `line-height` in all browsers.
 */
sub,
sup {
  font-size: 75%;
  line-height: 0;
  position: relative;
  vertical-align: baseline; }

sup {
  top: -0.5em; }

sub {
  bottom: -0.25em; }

/* Embedded content
   ========================================================================== */
/**
 * Remove border when inside `a` element in IE 8/9/10.
 */
img {
  border: 0; }

/**
 * Correct overflow not hidden in IE 9/10/11.
 */
svg:not(:root) {
  overflow: hidden; }

/* Grouping content
   ========================================================================== */
/**
 * Address margin not present in IE 8/9 and Safari.
 */
figure {
  margin: 1em 40px; }

/**
 * Address differences between Firefox and other browsers.
 */
hr {
  box-sizing: content-box;
  height: 0; }

/**
 * Contain overflow in all browsers.
 */
pre {
  overflow: auto; }

/**
 * Address odd `em`-unit font size rendering in all browsers.
 */
code,
kbd,
pre,
samp {
  font-family: monospace, monospace;
  font-size: 1em; }

/* Forms
   ========================================================================== */
/**
 * Known limitation: by default, Chrome and Safari on OS X allow very limited
 * styling of `select`, unless a `border` property is set.
 */
/**
 * 1. Correct color not being inherited.
 *    Known issue: affects color of disabled elements.
 * 2. Correct font properties not being inherited.
 * 3. Address margins set differently in Firefox 4+, Safari, and Chrome.
 */
button,
input,
optgroup,
select,
textarea {
  color: inherit;
  /* 1 */
  font: inherit;
  /* 2 */
  margin: 0;
  /* 3 */ }

/**
 * Address `overflow` set to `hidden` in IE 8/9/10/11.
 */
button {
  overflow: visible; }

/**
 * Address inconsistent `text-transform` inheritance for `button` and `select`.
 * All other form control elements do not inherit `text-transform` values.
 * Correct `button` style inheritance in Firefox, IE 8/9/10/11, and Opera.
 * Correct `select` style inheritance in Firefox.
 */
button,
select {
  text-transform: none; }

/*Button Reset*/
button {
  display: inline-block;
  margin-bottom: 0;
  text-align: center;
  white-space: nowrap;
  vertical-align: middle;
  -ms-touch-action: manipulation;
  touch-action: manipulation;
  cursor: pointer;
  -webkit-user-select: none;
  -moz-user-select: none;
  -ms-user-select: none;
  user-select: none;
  background-color: transparent;
  background-image: none;
  border: none;
  border-radius: 0;
  color: inherit; }

/**
 * 1. Avoid the WebKit bug in Android 4.0.* where (2) destroys native `audio`
 *    and `video` controls.
 * 2. Correct inability to style clickable `input` types in iOS.
 * 3. Improve usability and consistency of cursor style between image-type
 *    `input` and others.
 */
button,
html input[type="button"],
input[type="reset"],
input[type="submit"] {
  -webkit-appearance: button;
  /* 2 */
  cursor: pointer;
  /* 3 */ }

/**
 * Re-set default cursor for disabled elements.
 */
button[disabled],
html input[disabled] {
  cursor: default; }

/**
 * Remove inner padding and border in Firefox 4+.
 */
button::-moz-focus-inner,
input::-moz-focus-inner {
  border: 0;
  padding: 0; }

/**
 * Address Firefox 4+ setting `line-height` on `input` using `!important` in
 * the UA stylesheet.
 */
input {
  line-height: normal; }

/**
 * It's recommended that you don't attempt to style these elements.
 * Firefox's implementation doesn't respect box-sizing, padding, or width.
 *
 * 1. Address box sizing set to `content-box` in IE 8/9/10.
 * 2. Remove excess padding in IE 8/9/10.
 */
input[type="checkbox"],
input[type="radio"] {
  box-sizing: border-box;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Fix the cursor style for Chrome's increment/decrement buttons. For certain
 * `font-size` values of the `input`, it causes the cursor style of the
 * decrement button to change from `default` to `text`.
 */
input[type="number"]::-webkit-inner-spin-button,
input[type="number"]::-webkit-outer-spin-button {
  height: auto; }

/**
 * 1. Address `appearance` set to `searchfield` in Safari and Chrome.
 * 2. Address `box-sizing` set to `border-box` in Safari and Chrome.
 */
input[type="search"] {
  -webkit-appearance: textfield;
  /* 1 */
  box-sizing: content-box;
  /* 2 */ }

/**
 * Remove inner padding and search cancel button in Safari and Chrome on OS X.
 * Safari (but not Chrome) clips the cancel button when the search input has
 * padding (and `textfield` appearance).
 */
input[type="search"]::-webkit-search-cancel-button,
input[type="search"]::-webkit-search-decoration {
  -webkit-appearance: none; }

/**
 * Define consistent border, margin, and padding.
 */
fieldset {
  border: 1px solid #c0c0c0;
  margin: 0 2px;
  padding: 0.35em 0.625em 0.75em; }

/**
 * 1. Correct `color` not being inherited in IE 8/9/10/11.
 * 2. Remove padding so people aren't caught out if they zero out fieldsets.
 */
legend {
  border: 0;
  /* 1 */
  padding: 0;
  /* 2 */ }

/**
 * Remove default vertical scrollbar in IE 8/9/10/11.
 */
textarea {
  overflow: auto; }

/**
 * Don't inherit the `font-weight` (applied by a rule above).
 * NOTE: the default cannot safely be changed in Chrome and Safari on OS X.
 */
optgroup {
  font-weight: bold; }

/* Tables
   ========================================================================== */
/**
 * Remove most spacing between table cells.
 */
table {
  border-collapse: collapse;
  border-spacing: 0; }

td,
th {
  padding: 0; }

html {
  box-sizing: border-box; }

*, *::after, *::before {
  box-sizing: inherit; }

body:before {
  background-image: -webkit-linear-gradient(left, transparent 0, #eee 0, #eee 6.17215%, transparent 6.17215%, transparent 8.5298%, #eee 8.5298%, #eee 14.70196%, transparent 14.70196%, transparent 17.05961%, #eee 17.05961%, #eee 23.23176%, transparent 23.23176%, transparent 25.58941%, #eee 25.58941%, #eee 31.76157%, transparent 31.76157%, transparent 34.11922%, #eee 34.11922%, #eee 40.29137%, transparent 40.29137%, transparent 42.64902%, #eee 42.64902%, #eee 48.82117%, transparent 48.82117%, transparent 51.17883%, #eee 51.17883%, #eee 57.35098%, transparent 57.35098%, transparent 59.70863%, #eee 59.70863%, #eee 65.88078%, transparent 65.88078%, transparent 68.23843%, #eee 68.23843%, #eee 74.41059%, transparent 74.41059%, transparent 76.76824%, #eee 76.76824%, #eee 82.94039%, transparent 82.94039%, transparent 85.29804%, #eee 85.29804%, #eee 91.4702%, transparent 91.4702%, transparent 93.82785%, #eee 93.82785%, #eee 100%, transparent 100%);
  background-image: -moz-linear-gradient(left, transparent 0, #eee 0, #eee 6.17215%, transparent 6.17215%, transparent 8.5298%, #eee 8.5298%, #eee 14.70196%, transparent 14.70196%, transparent 17.05961%, #eee 17.05961%, #eee 23.23176%, transparent 23.23176%, transparent 25.58941%, #eee 25.58941%, #eee 31.76157%, transparent 31.76157%, transparent 34.11922%, #eee 34.11922%, #eee 40.29137%, transparent 40.29137%, transparent 42.64902%, #eee 42.64902%, #eee 48.82117%, transparent 48.82117%, transparent 51.17883%, #eee 51.17883%, #eee 57.35098%, transparent 57.35098%, transparent 59.70863%, #eee 59.70863%, #eee 65.88078%, transparent 65.88078%, transparent 68.23843%, #eee 68.23843%, #eee 74.41059%, transparent 74.41059%, transparent 76.76824%, #eee 76.76824%, #eee 82.94039%, transparent 82.94039%, transparent 85.29804%, #eee 85.29804%, #eee 91.4702%, transparent 91.4702%, transparent 93.82785%, #eee 93.82785%, #eee 100%, transparent 100%);
  background-image: -ms-linear-gradient(left, transparent 0, #eee 0, #eee 6.17215%, transparent 6.17215%, transparent 8.5298%, #eee 8.5298%, #eee 14.70196%, transparent 14.70196%, transparent 17.05961%, #eee 17.05961%, #eee 23.23176%, transparent 23.23176%, transparent 25.58941%, #eee 25.58941%, #eee 31.76157%, transparent 31.76157%, transparent 34.11922%, #eee 34.11922%, #eee 40.29137%, transparent 40.29137%, transparent 42.64902%, #eee 42.64902%, #eee 48.82117%, transparent 48.82117%, transparent 51.17883%, #eee 51.17883%, #eee 57.35098%, transparent 57.35098%, transparent 59.70863%, #eee 59.70863%, #eee 65.88078%, transparent 65.88078%, transparent 68.23843%, #eee 68.23843%, #eee 74.41059%, transparent 74.41059%, transparent 76.76824%, #eee 76.76824%, #eee 82.94039%, transparent 82.94039%, transparent 85.29804%, #eee 85.29804%, #eee 91.4702%, transparent 91.4702%, transparent 93.82785%, #eee 93.82785%, #eee 100%, transparent 100%);
  background-image: -o-linear-gradient(left, transparent 0, #eee 0, #eee 6.17215%, transparent 6.17215%, transparent 8.5298%, #eee 8.5298%, #eee 14.70196%, transparent 14.70196%, transparent 17.05961%, #eee 17.05961%, #eee 23.23176%, transparent 23.23176%, transparent 25.58941%, #eee 25.58941%, #eee 31.76157%, transparent 31.76157%, transparent 34.11922%, #eee 34.11922%, #eee 40.29137%, transparent 40.29137%, transparent 42.64902%, #eee 42.64902%, #eee 48.82117%, transparent 48.82117%, transparent 51.17883%, #eee 51.17883%, #eee 57.35098%, transparent 57.35098%, transparent 59.70863%, #eee 59.70863%, #eee 65.88078%, transparent 65.88078%, transparent 68.23843%, #eee 68.23843%, #eee 74.41059%, transparent 74.41059%, transparent 76.76824%, #eee 76.76824%, #eee 82.94039%, transparent 82.94039%, transparent 85.29804%, #eee 85.29804%, #eee 91.4702%, transparent 91.4702%, transparent 93.82785%, #eee 93.82785%, #eee 100%, transparent 100%);
  background-image: linear-gradient(to left, transparent 0, #eee 0, #eee 6.17215%, transparent 6.17215%, transparent 8.5298%, #eee 8.5298%, #eee 14.70196%, transparent 14.70196%, transparent 17.05961%, #eee 17.05961%, #eee 23.23176%, transparent 23.23176%, transparent 25.58941%, #eee 25.58941%, #eee 31.76157%, transparent 31.76157%, transparent 34.11922%, #eee 34.11922%, #eee 40.29137%, transparent 40.29137%, transparent 42.64902%, #eee 42.64902%, #eee 48.82117%, transparent 48.82117%, transparent 51.17883%, #eee 51.17883%, #eee 57.35098%, transparent 57.35098%, transparent 59.70863%, #eee 59.70863%, #eee 65.88078%, transparent 65.88078%, transparent 68.23843%, #eee 68.23843%, #eee 74.41059%, transparent 74.41059%, transparent 76.76824%, #eee 76.76824%, #eee 82.94039%, transparent 82.94039%, transparent 85.29804%, #eee 85.29804%, #eee 91.4702%, transparent 91.4702%, transparent 93.82785%, #eee 93.82785%, #eee 100%, transparent 100%);
  content: "";
  display: inline-block;
  height: 100%;
  left: 0;
  margin: 0 auto;
  max-width: 68em;
  opacity: 0.4;
  pointer-events: none;
  position: fixed;
  right: 0;
  width: 100%;
  z-index: -1; }

.clearfix:after, .container:after {
  content: "";
  display: table;
  clear: both; }

.float-right {
  float: right; }

.float-left {
  float: left; }

.transition, #navbar li {
  transition: all 0.3s ease-in-out; }

* {
  font-family: lato, sans-serif;
  box-sizing: border-box;
  position: relative;
  -webkit-transition: all 0.3s ease-in-out;
  -moz-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out; }
  *:hover {
    -webkit-transition: all 0.3s ease-in-out;
    -moz-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out; }

html,
body {
  height: 100%; }

a {
  color: inherit;
  text-decoration: inherit; }

section {
  width: 100%; }

.container {
  max-width: 68em;
  margin-left: auto;
  margin-right: auto;
  margin: 0 auto; }
  .container::after {
    clear: both;
    content: "";
    display: table; }

#topbar {
  background: #353533;
  height: 50px; }
  #topbar .container {
    height: inherit; }
  #topbar button {
    color: #a3a3a3;
    background: #2e2e2c;
    font-size: 13px;
    height: inherit;
    padding: 15px;
    margin-left: 2px;
    float: left;
    height: 100%; }
    #topbar button:hover {
      background: #f45245;
      color: white; }
    #topbar button:hover a {
      color: white; }
  #topbar .welcome button {
    margin: 0; }
  #topbar .welcome a {
    color: #a3a3a3;
    text-decoration: none;
    display: block; }
  #topbar .shop-btns {
    float: right;
    display: block;
    margin-left: 2.35765%;
    width: 31.76157%;
    width: auto;
    height: 100%; }
    #topbar .shop-btns:last-child {
      margin-left: 0; }

#header {
  background: #f45245; }
  #header .container {
    height: 150px; }
  #header .branding {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 14.70196%; }
    #header .branding:last-child {
      margin-right: 0; }
    #header .branding a {
      display: block; }
    #header .branding .logo {
      overflow: hidden;
      text-indent: 101%;
      white-space: nowrap;
      background-image: url("../images/logo.svg");
      background-repeat: no-repeat;
      background-position: center;
      background-size: contain;
      height: 150px;
      margin: 0; }

#navbar {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 82.94039%; }
  #navbar:last-child {
    margin-right: 0; }
  #navbar * {
    height: inherit; }
  #navbar .nav-wrap {
    float: right;
    display: block;
    margin-left: 2.35765%;
    width: 82.94039%; }
    #navbar .nav-wrap:last-child {
      margin-left: 0; }
  #navbar ul {
    height: 150px;
    margin: 0;
    padding: 0;
    float: left; }
  #navbar li {
    display: inline-block; }
    #navbar li a {
      color: #af2d23; }
      #navbar li a:visited {
        color: #af2d23; }
      #navbar li a:hover {
        color: white; }
      #navbar li a:active {
        color: white; }
    #navbar li .home {
      background: #E65043; }
    #navbar li:hover {
      background: #E65043; }
  #navbar a {
    font-size: 16px;
    text-transform: uppercase;
    text-decoration: none;
    padding: 30px;
    vertical-align: middle;
    display: table-cell;
    height: 150px; }
  #navbar i {
    line-height: 150px;
    color: #af2d23; }

#header-search-bar {
  height: 80px;
  padding: 10px 0;
  background: #2e2e2c; }
  #header-search-bar form {
    float: right;
    display: block;
    margin-left: 2.35765%;
    width: 48.82117%; }
    #header-search-bar form:last-child {
      margin-left: 0; }
    #header-search-bar form label {
      text-indent: -1000px;
      color: #2e2e2c;
      height: auto; }
    #header-search-bar form .search-field {
      width: 411px;
      float: left;
      padding: 1rem 2rem 1rem 1rem; }
    #header-search-bar form input[type="submit"] {
      float: left;
      padding: 1.23rem 0.5em;
      background-image: url("../images/search-icon.svg");
      background-repeat: no-repeat;
      background-position: center;
      background-color: #a3a3a3;
      color: transparent;
      border: none; }

#splash-header {
  min-height: 100%;
  background-image: url("../images/home_slider.jpg");
  background-repeat: no-repeat;
  background-size: cover;
  -webkit-box-align: center;
  -moz-box-align: center;
  box-align: center;
  -webkit-align-items: center;
  -moz-align-items: center;
  -ms-align-items: center;
  -o-align-items: center;
  align-items: center;
  -ms-flex-align: center;
  display: -webkit-box;
  display: -moz-box;
  display: box;
  display: -webkit-flex;
  display: -moz-flex;
  display: -ms-flexbox;
  display: flex; }
  #splash-header .container {
    -webkit-box-flex: 1;
    -moz-box-flex: 1;
    box-flex: 1;
    -webkit-flex: 1;
    -moz-flex: 1;
    -ms-flex: 1;
    flex: 1; }
    #splash-header .container .hero-txt-wrap {
      text-align: center;
      color: white; }
      #splash-header .container .hero-txt-wrap h2 {
        font-size: 70px;
        margin: 0; }
      #splash-header .container .hero-txt-wrap h3 {
        font-size: 25px; }
      #splash-header .container .hero-txt-wrap button {
        font-size: 16px;
        border: 2px solid white;
        padding: 10px 20px; }

.row {
  padding: 50px 0;
  text-align: center; }

#row1 .h2-accent {
  position: relative; }
  #row1 .h2-accent:before, #row1 .h2-accent:after {
    background: #dddddd;
    width: 300px;
    height: 2px;
    content: "";
    display: block;
    margin: auto;
    z-index: 0; }
  #row1 .h2-accent:before {
    position: absolute;
    top: -2px;
    right: 0;
    bottom: 0;
    left: 0; }
  #row1 .h2-accent:after {
    position: absolute;
    top: 8px;
    right: 0;
    bottom: 0;
    left: 0;
    width: -webkit-calc(300px - 40px);
    width: calc(300px - 40px); }
  #row1 .h2-accent h2 {
    font-size: 32px;
    font-weight: bold;
    font-style: normal;
    text-transform: uppercase;
    color: #353533;
    text-align: center;
    background: white;
    width: -webkit-calc(300px - 90px);
    width: calc(300px - 90px);
    margin: 15px auto 50px;
    z-index: 1; }

#row1 .pod-wrap {
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 100%; }
  #row1 .pod-wrap:last-child {
    margin-right: 0; }
  #row1 .pod-wrap .pod {
    background: #2e2e2c;
    position: relative;
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 23.23176%;
    height: 356px; }
    #row1 .pod-wrap .pod:last-child {
      margin-right: 0; }
    #row1 .pod-wrap .pod a {
      display: block;
      position: relative; }
    #row1 .pod-wrap .pod .front {
      transform: scale(0);
      width: 100%; }
    #row1 .pod-wrap .pod .back {
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      margin: auto; }
    #row1 .pod-wrap .pod:hover img.front {
      transform: scale(1);
      -webkit-transition-delay: 0.2s;
      -moz-transition-delay: 0.2s;
      transition-delay: 0.2s; }

#row2 {
  background: #ededed; }
  #row2 .container {
    display: -webkit-box;
    display: -moz-box;
    display: box;
    display: -webkit-flex;
    display: -moz-flex;
    display: -ms-flexbox;
    display: flex;
    -webkit-box-align: center;
    -moz-box-align: center;
    box-align: center;
    -webkit-align-items: center;
    -moz-align-items: center;
    -ms-align-items: center;
    -o-align-items: center;
    align-items: center;
    -ms-flex-align: center;
    -webkit-box-pack: center;
    -moz-box-pack: center;
    box-pack: center;
    -webkit-justify-content: center;
    -moz-justify-content: center;
    -ms-justify-content: center;
    -o-justify-content: center;
    justify-content: center;
    -ms-flex-pack: center; }
    #row2 .container .image {
      border-right: 1px solid #d4d4d4;
      padding-right: 30px;
      margin-right: 30px; }
      #row2 .container .image img {
        height: 140px;
        width: 140px;
        border-radius: 50%; }
    #row2 .container .text {
      color: #2e2e2c;
      font-size: 27px;
      font-weight: 100;
      font-style: italic; }
      #row2 .container .text p {
        padding: 0;
        margin: 0; }
    #row2 .container .name {
      color: #f45245;
      font-size: 14px;
      font-weight: bold;
      margin: 70px 0 0 90px; }

#row3 {
  background: #2e2e2c url("../images/pattern.png") repeat center center; }
  #row3 .h2-accent {
    position: relative; }
    #row3 .h2-accent:before, #row3 .h2-accent:after {
      background: #af2d23;
      width: 300px;
      height: 2px;
      content: "";
      display: block;
      margin: auto;
      z-index: 0; }
    #row3 .h2-accent:before {
      position: absolute;
      top: -2px;
      right: 0;
      bottom: 0;
      left: 0; }
    #row3 .h2-accent:after {
      position: absolute;
      top: 8px;
      right: 0;
      bottom: 0;
      left: 0;
      width: -webkit-calc(300px - 40px);
      width: calc(300px - 40px); }
    #row3 .h2-accent h2 {
      font-size: 32px;
      font-weight: bold;
      font-style: normal;
      text-transform: uppercase;
      color: #af2d23;
      text-align: center;
      background: #f45245;
      width: -webkit-calc(300px - 90px);
      width: calc(300px - 90px);
      margin: 15px auto 50px;
      z-index: 1; }
  #row3 .h2-wrap {
    background: #f45245;
    padding: 10px;
    margin-top: -50px;
    margin-bottom: 20px; }
    #row3 .h2-wrap h2 {
      padding: 0;
      margin-top: 0;
      margin-bottom: 0; }
  #row3 .pod-wrap {
    float: left;
    display: block;
    margin-right: 2.35765%;
    width: 100%; }
    #row3 .pod-wrap:last-child {
      margin-right: 0; }
    #row3 .pod-wrap .pod {
      position: relative;
      overflow: hidden;
      height: 150px;
      float: left;
      display: block;
      margin-right: 2.35765%;
      width: 31.76157%;
      -webkit-transition: all 0.3s ease-in-out;
      -moz-transition: all 0.3s ease-in-out;
      transition: all 0.3s ease-in-out; }
      #row3 .pod-wrap .pod:last-child {
        margin-right: 0; }
      #row3 .pod-wrap .pod a {
        display: block; }
      #row3 .pod-wrap .pod:after {
        border: 0px solid white;
        box-shadow: 0px 0px 0px 27px rgba(255, 255, 255, 0.3);
        content: "";
        display: block;
        height: 100%;
        width: 100%;
        margin: auto;
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        -webkit-transition: all 0.3s ease-in-out;
        -moz-transition: all 0.3s ease-in-out;
        transition: all 0.3s ease-in-out; }
      #row3 .pod-wrap .pod:hover .front {
        width: 100%;
        height: auto;
        -webkit-transition: all 0.3s ease-in-out;
        -moz-transition: all 0.3s ease-in-out;
        transition: all 0.3s ease-in-out; }
      #row3 .pod-wrap .pod:hover:after {
        border-width: 1px;
        height: 120px;
        width: 320px; }
      #row3 .pod-wrap .pod .front {
        width: 115%;
        height: auto; }
      #row3 .pod-wrap .pod .back {
        position: absolute;
        top: 0;
        right: 0;
        bottom: 0;
        left: 0;
        margin: auto; }

#row4 .h2-accent {
  position: relative; }
  #row4 .h2-accent:before, #row4 .h2-accent:after {
    background: #dddddd;
    width: 600px;
    height: 2px;
    content: "";
    display: block;
    margin: auto;
    z-index: 0; }
  #row4 .h2-accent:before {
    position: absolute;
    top: -2px;
    right: 0;
    bottom: 0;
    left: 0; }
  #row4 .h2-accent:after {
    position: absolute;
    top: 8px;
    right: 0;
    bottom: 0;
    left: 0;
    width: -webkit-calc(600px - 40px);
    width: calc(600px - 40px); }
  #row4 .h2-accent h2 {
    font-size: 32px;
    font-weight: bold;
    font-style: normal;
    text-transform: uppercase;
    color: #2e2e2c;
    text-align: center;
    background: white;
    width: -webkit-calc(600px - 90px);
    width: calc(600px - 90px);
    margin: 15px auto 50px;
    z-index: 1; }

#row4 .pod {
  position: relative;
  overflow: hidden;
  float: left;
  display: block;
  margin-right: 2.35765%;
  width: 23.23176%;
  -webkit-transition: all 0.3s ease-in-out;
  -moz-transition: all 0.3s ease-in-out;
  transition: all 0.3s ease-in-out;
  -webkit-transition-delay: 0.1s;
  -moz-transition-delay: 0.1s;
  transition-delay: 0.1s; }
  #row4 .pod:last-child {
    margin-right: 0; }
  #row4 .pod:hover {
    -webkit-transition: all 0.3s ease-in-out;
    -moz-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
    -webkit-transition-delay: 0.1s;
    -moz-transition-delay: 0.1s;
    transition-delay: 0.1s; }
  #row4 .pod img {
    width: 100%;
    transform: translate(0px, 0px); }
  #row4 .pod .product-description {
    background-color: #2e2e2c;
    color: #a3a3a3;
    padding: 10px 12px;
    text-align: left;
    font-size: 13px;
    height: 176px;
    position: absolute;
    top: 145px;
    right: 0;
    bottom: 0;
    left: 0;
    transform: translate(0px, 180px); }
    #row4 .pod .product-description h3 {
      font-size: 18px;
      color: white;
      margin: 0; }
    #row4 .pod .product-description ul.stars {
      padding: 0;
      margin-top: 4px; }
      #row4 .pod .product-description ul.stars li {
        display: inline-block; }
    #row4 .pod .product-description p {
      line-height: 18px;
      margin-top: 10px;
      margin-bottom: 10px; }
      #row4 .pod .product-description p:after {
        content: "";
        display: block;
        height: 1px;
        width: 100px;
        background: #aaa;
        margin-top: 10px; }
    #row4 .pod .product-description ul {
      padding: 0;
      margin: 0; }
      #row4 .pod .product-description ul li {
        list-style: none; }
        #row4 .pod .product-description ul li a {
          color: white; }
  #row4 .pod .add-to-cart-wrap {
    background: #2e2e2c;
    color: white;
    padding: 17px;
    margin-top: -4px;
    display: flex;
    -webkit-box-pack: justify;
    -moz-box-pack: justify;
    box-pack: justify;
    -webkit-justify-content: space-between;
    -moz-justify-content: space-between;
    -ms-justify-content: space-between;
    -o-justify-content: space-between;
    justify-content: space-between;
    -ms-flex-pack: justify;
    overflow: hidden;
    -webkit-transition: all 0.3s ease-in-out;
    -moz-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
    -webkit-transition-delay: 0.1s;
    -moz-transition-delay: 0.1s;
    transition-delay: 0.1s; }
    #row4 .pod .add-to-cart-wrap:before {
      content: "";
      display: block;
      background: #f45245;
      position: absolute;
      top: 0;
      right: 0;
      bottom: 0;
      left: 0;
      transform: translate(0px, -55px);
      -webkit-transition: all 0.3s ease-in-out;
      -moz-transition: all 0.3s ease-in-out;
      transition: all 0.3s ease-in-out;
      -webkit-transition-delay: 0.1s;
      -moz-transition-delay: 0.1s;
      transition-delay: 0.1s; }
  #row4 .pod:hover img {
    transform: translate(0px, -100px); }
  #row4 .pod:hover .product-description {
    transform: translate(0px, 0px); }
  #row4 .pod:hover .add-to-cart-wrap:before {
    transform: translate(0px, 0px);
    -webkit-transition: all 0.3s ease-in-out;
    -moz-transition: all 0.3s ease-in-out;
    transition: all 0.3s ease-in-out;
    -webkit-transition-delay: 0.1s;
    -moz-transition-delay: 0.1s;
    transition-delay: 0.1s; }
    #row4 .pod:hover .add-to-cart-wrap:before button {
      padding: 0; }

/*# sourceMappingURL=data:application/json;base64, */
